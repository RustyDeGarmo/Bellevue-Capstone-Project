/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.58
 * Generated at: 2022-05-13 22:26:24 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.provisio.daos.HotelsDAO;
import com.provisio.models.Hotel;
import java.util.List;

public final class locations_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/WEB-INF/tags/base-page.tag", Long.valueOf(1652480234255L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1652480237996L));
    _jspx_dependants.put("jar:file:/C:/apache-tomcat-9.0.58/webapps/Provisio/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/ProvisioHotels/WEB-INF/lib/jstl-1.2.jar!/META-INF/c-1_0-rt.tld", Long.valueOf(1153403082000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.provisio.daos.HotelsDAO");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.provisio.models.Hotel");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fset_0026_005fvar;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fset_0026_005fvar.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!-- Red Team: Anthony Wright Andreas Arnet Angela Perkins Jennifer Thomas Chad Hendren Rusty DeGarmo -->\r\n");
      out.write("<!-- User interface for: Locations Page-->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- Locations -->\r\n");
      //  c:set
      org.apache.taglibs.standard.tag.rt.core.SetTag _jspx_th_c_005fset_005f0 = (org.apache.taglibs.standard.tag.rt.core.SetTag) _005fjspx_005ftagPool_005fc_005fset_0026_005fvar.get(org.apache.taglibs.standard.tag.rt.core.SetTag.class);
      boolean _jspx_th_c_005fset_005f0_reused = false;
      try {
        _jspx_th_c_005fset_005f0.setPageContext(_jspx_page_context);
        _jspx_th_c_005fset_005f0.setParent(null);
        // /locations.jsp(12,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_c_005fset_005f0.setVar("bodyContent");
        int _jspx_eval_c_005fset_005f0 = _jspx_th_c_005fset_005f0.doStartTag();
        if (_jspx_eval_c_005fset_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          if (_jspx_eval_c_005fset_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
            out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_c_005fset_005f0);
          }
          do {
            out.write("\r\n");
            out.write("\r\n");
            out.write("	<section>\r\n");
            out.write("		<div class=\"map-wrapper-500\">\r\n");
            out.write("			<div class=\"h-100\" id=\"categoryMap\"></div>\r\n");
            out.write("		</div>\r\n");
            out.write("	</section>\r\n");
            out.write("\r\n");
            out.write("	<section class=\"py-6 bg-gray-100\">\r\n");
            out.write("		<div class=\"container\">\r\n");
            out.write("			<div class=\"row mb-5\">\r\n");
            out.write("				<div class=\"col-md-8\">\r\n");
            out.write("					<h2>Our Hotels</h2>\r\n");
            out.write("					Provisio Hotels has locations across North American! We are proud\r\n");
            out.write("					to offer you a luxurious yet affordable stay no matter where your\r\n");
            out.write("					travels take you.\r\n");
            out.write("				</div>\r\n");
            out.write("			</div>\r\n");
            out.write("			<!-- Slider main container-->\r\n");
            out.write("			<div\r\n");
            out.write("				class=\"swiper-container swiper-container-mx-negative swiper-init pt-3\"\r\n");
            out.write("				data-swiper='{\"slidesPerView\":4,\"spaceBetween\":20,\"roundLengths\":true,\"pagination\":{\"el\":\".swiper-pagination\",\"clickable\":true,\"dynamicBullets\":true}}'>\r\n");
            out.write("				<!-- Additional required wrapper-->\r\n");
            out.write("				<div class=\"swiper-wrapper pb-5\">\r\n");
            out.write("					<!-- Slides-->\r\n");
            out.write("\r\n");
            out.write("					");

					HotelsDAO hdao = new HotelsDAO();
					List<Hotel> featuredHotels = hdao.fetchFeaturedHotels();
					
            out.write("\r\n");
            out.write("\r\n");
            out.write("					");

					for (Hotel hot : featuredHotels) {
					
            out.write("\r\n");
            out.write("\r\n");
            out.write("					<div class=\"swiper-slide h-auto px-2\">\r\n");
            out.write("						<div class=\"w-100 h-100 hover-animate\">\r\n");
            out.write("							<div class=\"card h-100 border-0 shadow\">\r\n");
            out.write("								<div class=\"card-img-top overflow-hidden gradient-overlay\">\r\n");
            out.write("									<img class=\"img-fluid\" src=\"");
            out.print(hot.getImages().get(0));
            out.write("\"\r\n");
            out.write("										alt=\"");
            out.print(hot.getName());
            out.write("\" /> <a class=\"tile-link\"\r\n");
            out.write("										href=\"/ProvisioHotels/hotels/");
            out.print(hot.getName().toLowerCase().replace(' ', '-'));
            out.write("\"></a>\r\n");
            out.write("								</div>\r\n");
            out.write("								<div class=\"card-body d-flex align-items-center\">\r\n");
            out.write("									<div class=\"w-100\">\r\n");
            out.write("										<h6 class=\"card-title\">\r\n");
            out.write("											<a class=\"text-decoration-none text-dark\"\r\n");
            out.write("												href=\"/ProvisioHotels/hotels/");
            out.print(hot.getName().toLowerCase().replace(' ', '-'));
            out.write('"');
            out.write('>');
            out.print(hot.getName());
            out.write("</a>\r\n");
            out.write("										</h6>\r\n");
            out.write("										<div class=\"d-flex card-subtitle mb-3\">\r\n");
            out.write("											<p class=\"flex-shrink-1 mb-0 card-stars text-xs text-end\">\r\n");
            out.write("												");

												for (int i = 1; i <= 5; i++) {
												
            out.write("\r\n");
            out.write("												");

												if (i <= hot.getRate()) {
												
            out.write("\r\n");
            out.write("												<i class=\"fa fa-star text-warning\"></i>\r\n");
            out.write("												");

												} else {
												
            out.write("\r\n");
            out.write("												<i class=\"fa fa-star text-gray-300\"></i>\r\n");
            out.write("												");

												}
												}
												
            out.write("\r\n");
            out.write("											</p>\r\n");
            out.write("										</div>\r\n");
            out.write("										<p class=\"card-text text-muted\">\r\n");
            out.write("											<span class=\"h4 text-primary\">from $");
            out.print(hot.getPerNight());
            out.write("</span>\r\n");
            out.write("											per night\r\n");
            out.write("										</p>\r\n");
            out.write("									</div>\r\n");
            out.write("								</div>\r\n");
            out.write("							</div>\r\n");
            out.write("						</div>\r\n");
            out.write("					</div>\r\n");
            out.write("\r\n");
            out.write("					");

					}
					
            out.write("\r\n");
            out.write("				</div>\r\n");
            out.write("			</div>\r\n");
            out.write("		</div>\r\n");
            out.write("	</section>\r\n");
            out.write("\r\n");
            int evalDoAfterBody = _jspx_th_c_005fset_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
          if (_jspx_eval_c_005fset_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
            out = _jspx_page_context.popBody();
          }
        }
        if (_jspx_th_c_005fset_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fc_005fset_0026_005fvar.reuse(_jspx_th_c_005fset_005f0);
        _jspx_th_c_005fset_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fset_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fset_005f0_reused);
      }
      out.write("\r\n");
      out.write("\r\n");
      if (_jspx_meth_ext_005fbase_002dpage_005f0(_jspx_page_context))
        return;
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_ext_005fbase_002dpage_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    javax.servlet.http.HttpServletRequest request = (javax.servlet.http.HttpServletRequest)_jspx_page_context.getRequest();
    javax.servlet.http.HttpServletResponse response = (javax.servlet.http.HttpServletResponse)_jspx_page_context.getResponse();
    //  ext:base-page
    org.apache.jsp.tag.web.base_002dpage_tag _jspx_th_ext_005fbase_002dpage_005f0 = new org.apache.jsp.tag.web.base_002dpage_tag();
    _jsp_getInstanceManager().newInstance(_jspx_th_ext_005fbase_002dpage_005f0);
    try {
      _jspx_th_ext_005fbase_002dpage_005f0.setJspContext(_jspx_page_context);
      javax.servlet.jsp.tagext.JspFragment _jspx_temp0 = new Helper( 0, _jspx_page_context, _jspx_th_ext_005fbase_002dpage_005f0, null);
      // /locations.jsp(100,0) name = title type = null reqTime = true required = false fragment = true deferredValue = false expectedTypeName = java.lang.String deferredMethod = false methodSignature = null
      _jspx_th_ext_005fbase_002dpage_005f0.setTitle(_jspx_temp0);
      java.lang.String _jspx_temp1 = "margin-top: 72px;";
      // /locations.jsp(100,0) name = bodyStyle type = java.lang.String reqTime = true required = false fragment = false deferredValue = false expectedTypeName = java.lang.String deferredMethod = false methodSignature = null
      _jspx_th_ext_005fbase_002dpage_005f0.setBodyStyle(_jspx_temp1);
      javax.servlet.jsp.tagext.JspFragment _jspx_temp2 = new Helper( 1, _jspx_page_context, _jspx_th_ext_005fbase_002dpage_005f0, null);
      // /locations.jsp(100,0) name = header type = null reqTime = true required = false fragment = true deferredValue = false expectedTypeName = java.lang.String deferredMethod = false methodSignature = null
      _jspx_th_ext_005fbase_002dpage_005f0.setHeader(_jspx_temp2);
      javax.servlet.jsp.tagext.JspFragment _jspx_temp3 = new Helper( 2, _jspx_page_context, _jspx_th_ext_005fbase_002dpage_005f0, null);
      // /locations.jsp(100,0) name = footer type = null reqTime = true required = false fragment = true deferredValue = false expectedTypeName = java.lang.String deferredMethod = false methodSignature = null
      _jspx_th_ext_005fbase_002dpage_005f0.setFooter(_jspx_temp3);
      javax.servlet.jsp.tagext.JspFragment _jspx_temp4 = new Helper( 3, _jspx_page_context, _jspx_th_ext_005fbase_002dpage_005f0, null);
      // /locations.jsp(100,0) name = styles type = null reqTime = true required = false fragment = true deferredValue = false expectedTypeName = java.lang.String deferredMethod = false methodSignature = null
      _jspx_th_ext_005fbase_002dpage_005f0.setStyles(_jspx_temp4);
      javax.servlet.jsp.tagext.JspFragment _jspx_temp5 = new Helper( 4, _jspx_page_context, _jspx_th_ext_005fbase_002dpage_005f0, null);
      // /locations.jsp(100,0) name = scripts type = null reqTime = true required = false fragment = true deferredValue = false expectedTypeName = java.lang.String deferredMethod = false methodSignature = null
      _jspx_th_ext_005fbase_002dpage_005f0.setScripts(_jspx_temp5);
      _jspx_th_ext_005fbase_002dpage_005f0.setJspBody(new Helper( 5, _jspx_page_context, _jspx_th_ext_005fbase_002dpage_005f0, null));
      _jspx_th_ext_005fbase_002dpage_005f0.doTag();
    } finally {
      _jsp_getInstanceManager().destroyInstance(_jspx_th_ext_005fbase_002dpage_005f0);
    }
    return false;
  }

  private class Helper
      extends org.apache.jasper.runtime.JspFragmentHelper
  {
    private javax.servlet.jsp.tagext.JspTag _jspx_parent;
    private int[] _jspx_push_body_count;

    public Helper( int discriminator, javax.servlet.jsp.JspContext jspContext, javax.servlet.jsp.tagext.JspTag _jspx_parent, int[] _jspx_push_body_count ) {
      super( discriminator, jspContext, _jspx_parent );
      this._jspx_parent = _jspx_parent;
      this._jspx_push_body_count = _jspx_push_body_count;
    }
    public boolean invoke0( javax.servlet.jsp.JspWriter out ) 
      throws java.lang.Throwable
    {
      out.write("Locations");
      return false;
    }
    public boolean invoke1( javax.servlet.jsp.JspWriter out ) 
      throws java.lang.Throwable
    {
      javax.servlet.http.HttpServletRequest request = (javax.servlet.http.HttpServletRequest)_jspx_page_context.getRequest();
      javax.servlet.http.HttpServletResponse response = (javax.servlet.http.HttpServletResponse)_jspx_page_context.getResponse();
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "common/header.jsp" + "?" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("active_nav", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("locations", request.getCharacterEncoding()), out, false);
      return false;
    }
    public boolean invoke2( javax.servlet.jsp.JspWriter out ) 
      throws java.lang.Throwable
    {
      javax.servlet.http.HttpServletRequest request = (javax.servlet.http.HttpServletRequest)_jspx_page_context.getRequest();
      javax.servlet.http.HttpServletResponse response = (javax.servlet.http.HttpServletResponse)_jspx_page_context.getResponse();
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "common/footer.jsp", out, false);
      return false;
    }
    public boolean invoke3( javax.servlet.jsp.JspWriter out ) 
      throws java.lang.Throwable
    {
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("			href=\"https://unpkg.com/leaflet@1.5.1/dist/leaflet.css\">");
      return false;
    }
    public boolean invoke4( javax.servlet.jsp.JspWriter out ) 
      throws java.lang.Throwable
    {
      out.write("<!-- Map-->\r\n");
      out.write("	    <script src=\"https://unpkg.com/leaflet@1.5.1/dist/leaflet.js\"></script>\r\n");
      out.write("	    <!-- Available tile layers-->\r\n");
      out.write("	    <script src=\"js/map-layers.js\"></script>\r\n");
      out.write("	    <script src=\"js/map-category.js\"></script>\r\n");
      out.write("	    <script>\r\n");
      out.write("						createListingsMap({\r\n");
      out.write("							mapId : 'categoryMap',\r\n");
      out.write("							jsonFile : 'js/rooms-geojson.json',\r\n");
      out.write("							mapPopupType : 'rental',\r\n");
      out.write("							useTextIcon : true\r\n");
      out.write("						});\r\n");
      out.write("					</script>");
      return false;
    }
    public boolean invoke5( javax.servlet.jsp.JspWriter out ) 
      throws java.lang.Throwable
    {
      out.write("\r\n");
      out.write("        ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${bodyContent}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\r\n");
      out.write("    ");
      return false;
    }
    public void invoke( java.io.Writer writer )
      throws javax.servlet.jsp.JspException
    {
      javax.servlet.jsp.JspWriter out = null;
      if( writer != null ) {
        out = this.jspContext.pushBody(writer);
      } else {
        out = this.jspContext.getOut();
      }
      try {
        Object _jspx_saved_JspContext = this.jspContext.getELContext().getContext(javax.servlet.jsp.JspContext.class);
        this.jspContext.getELContext().putContext(javax.servlet.jsp.JspContext.class,this.jspContext);
        switch( this.discriminator ) {
          case 0:
            invoke0( out );
            break;
          case 1:
            invoke1( out );
            break;
          case 2:
            invoke2( out );
            break;
          case 3:
            invoke3( out );
            break;
          case 4:
            invoke4( out );
            break;
          case 5:
            invoke5( out );
            break;
        }
        jspContext.getELContext().putContext(javax.servlet.jsp.JspContext.class,_jspx_saved_JspContext);
      }
      catch( java.lang.Throwable e ) {
        if (e instanceof javax.servlet.jsp.SkipPageException)
            throw (javax.servlet.jsp.SkipPageException) e;
        throw new javax.servlet.jsp.JspException( e );
      }
      finally {
        if( writer != null ) {
          this.jspContext.popBody();
        }
      }
    }
  }
}
